/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    `java-library`
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


sourceSets.create("jmh") {
    java.setSrcDirs(listOf("src/jmh/java"))
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.4.2")

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.4.2")

    "jmhImplementation"(project)
    "jmhImplementation"("org.openjdk.jmh:jmh-core:1.21")
    "jmhAnnotationProcessor"("org.openjdk.jmh:jmh-generator-annprocess:1.21")
}

val test by tasks.getting(Test::class) {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

// https://docs.gradle.org/current/dsl/org.gradle.api.tasks.JavaExec.html
tasks {
    register("jmh", type=JavaExec::class) {
        group = "benchmark"
        dependsOn("jmhClasses")
        main = "org.openjdk.jmh.Main"
        classpath = sourceSets["jmh"].runtimeClasspath
        // To enable the built-in stacktrace sampling profiler
        // args(listOf("-prof", "stack"))
        //args(listOf("-h"))
        args(listOf("-i", "1", "-r", "100ms", "-wi", "1", "-w", "100ms"))
    }
}
